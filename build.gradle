plugins {
  id "java-gradle-plugin"
  id "maven-publish"
  id 'signing'
}

group = 'com.unclezs'
version = property("app.version")
description = "gradle sass plugin"

java {
  withJavadocJar()
  withSourcesJar()
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.fork = true
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
  options.compilerArgs += ['-Xdoclint:none', '-Xlint:none', '-nowarn']
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  // lombok
  annotationProcessor "org.projectlombok:lombok:1.18.18"
  compileOnly "org.projectlombok:lombok:1.18.18"
  // test
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
  // jSass
  implementation "io.bit3:jsass:5.5.6"
}

test {
  useJUnitPlatform()
  include(["**/*Tests.class", "**/*Test.class"])
}

gradlePlugin {
  plugins {
    sass {
      id = 'com.unclezs.gradle.sass'
      implementationClass = 'com.unclezs.gradle.sass.SassCompilePlugin'
    }
  }
}


def githubUrl = "https://github.com/unclezs/${project.name}"
def snapshot = project.version.endsWith('SNAPSHOT')

publishing {
  repositories {
    maven {
      name = "aliyun"
      def releasesRepoUrl = findProperty("aliyun.maven.release")
      def snapshotsRepoUrl = findProperty("aliyun.maven.snapshot")
      url = snapshot ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = findProperty("aliyun.maven.username")
        password = findProperty("aliyun.maven.password")
      }
    }
    maven {
      name = "local"
      def releasesRepoUrl = "${buildDir}/repo/release"
      def snapshotsRepoUrl = "${buildDir}/repo/snapshot"
      url = snapshot ? snapshotsRepoUrl : releasesRepoUrl
    }
    maven {
      name = "sonatype"
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
      url = snapshot ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = findProperty("sonatype.name")
        password = findProperty("sonatype.password")
      }
    }
  }
}

publishing.publications.withType(MavenPublication) {
  pom {
    url = githubUrl
    name = project.description
    description = project.description
    licenses {
      license {
        name = "Apache License, Version 2.0"
        url = "https://www.apache.org/licenses/LICENSE-2.0"
        distribution = "repo"
      }
    }
    scm {
      url = githubUrl
      connection = "scm:git:${githubUrl}"
      developerConnection = "scm:git:${githubUrl}"
    }
    developers {
      developer {
        id = "uncle"
        name = "uncle"
        email = "unclezs@qq.com"
      }
    }
    issueManagement {
      system = "GitHub"
      url = "${githubUrl}/issues"
    }
  }
}

javadoc {
  options.addStringOption("charset", "UTF-8")
  options.addStringOption("tag", "date")
}

signing {
  sign publishing.publications
}

tasks.withType(Sign) {
  onlyIf { !snapshot }
}
